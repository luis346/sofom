# Generated by Django 5.0.7 on 2024-12-16 23:25

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CodigoPostal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_postal', models.CharField(max_length=5)),
                ('estado', models.CharField(max_length=100)),
                ('municipio', models.CharField(max_length=100)),
                ('colonia', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Solicitud',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(blank=True, choices=[('prospecto', 'Prospecto'), ('alta', 'Dada de Alta')], default='prospecto', max_length=20, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('apellido_paterno', models.CharField(max_length=100)),
                ('apellido_materno', models.CharField(max_length=100)),
                ('nombres', models.CharField(max_length=200)),
                ('fecha_nacimiento', models.DateField()),
                ('edad', models.IntegerField()),
                ('rfc', models.CharField(max_length=12)),
                ('genero', models.CharField(choices=[('M', 'Masculino'), ('F', 'Femenino')], max_length=1)),
                ('estado_civil', models.CharField(choices=[('Sol', 'Soltero(a)'), ('Cas', 'Casado(a)'), ('Viu', 'Viudo(a)'), ('Uni', 'Unión libre'), ('Div', 'Divorciado(a)')], max_length=3)),
                ('dependientes', models.IntegerField()),
                ('tipo_id_oficial', models.CharField(choices=[('INE', 'INE'), ('CM', 'Cartilla Militar'), ('PAS', 'Pasaporte')], max_length=3)),
                ('clave_id_oficial', models.CharField(max_length=50)),
                ('curp', models.CharField(max_length=18)),
                ('nacionalidad', models.CharField(choices=[('MX', 'Mexicana'), ('US', 'Extranjera')], max_length=50)),
                ('pais_nacimiento', models.CharField(choices=[('AL', 'Albania'), ('DE', 'Alemania'), ('AD', 'Andorra'), ('AO', 'Angola'), ('AG', 'Antigua y Barbuda'), ('SA', 'Arabia Saudita'), ('DZ', 'Argelia'), ('AR', 'Argentina'), ('AM', 'Armenia'), ('AU', 'Australia'), ('AT', 'Austria'), ('AZ', 'Azerbaiyán'), ('BS', 'Bahamas'), ('BH', 'Baréin'), ('BD', 'Bangladés'), ('BB', 'Barbados'), ('BE', 'Bélgica'), ('BZ', 'Belice'), ('BJ', 'Benín'), ('BT', 'Bután'), ('BO', 'Bolivia'), ('BA', 'Bosnia y Herzegovina'), ('BW', 'Botsuana'), ('BR', 'Brasil'), ('BN', 'Brunéi'), ('BG', 'Bulgaria'), ('BF', 'Burkina Faso'), ('BI', 'Burundi'), ('CV', 'Cabo Verde'), ('KH', 'Camboya'), ('CM', 'Camerún'), ('CA', 'Canadá'), ('QA', 'Catar'), ('TD', 'Chad'), ('CL', 'Chile'), ('CN', 'China'), ('CY', 'Chipre'), ('CO', 'Colombia'), ('KM', 'Comoras'), ('CG', 'Congo'), ('CD', 'Congo (República Democrática)'), ('KR', 'Corea del Sur'), ('KP', 'Corea del Norte'), ('CR', 'Costa Rica'), ('CI', 'Costa de Marfil'), ('HR', 'Croacia'), ('CU', 'Cuba'), ('DK', 'Dinamarca'), ('DM', 'Dominica'), ('EC', 'Ecuador'), ('EG', 'Egipto'), ('SV', 'El Salvador'), ('AE', 'Emiratos Árabes Unidos'), ('ER', 'Eritrea'), ('SK', 'Eslovaquia'), ('SI', 'Eslovenia'), ('ES', 'España'), ('US', 'Estados Unidos'), ('EE', 'Estonia'), ('ET', 'Etiopía'), ('PH', 'Filipinas'), ('FI', 'Finlandia'), ('FJ', 'Fiyi'), ('FR', 'Francia'), ('GA', 'Gabón'), ('GM', 'Gambia'), ('GE', 'Georgia'), ('GH', 'Ghana'), ('GR', 'Grecia'), ('GD', 'Granada'), ('GT', 'Guatemala'), ('GY', 'Guyana'), ('GN', 'Guinea'), ('GW', 'Guinea-Bisáu'), ('GQ', 'Guinea Ecuatorial'), ('HT', 'Haití'), ('HN', 'Honduras'), ('HU', 'Hungría'), ('IN', 'India'), ('ID', 'Indonesia'), ('IQ', 'Irak'), ('IR', 'Irán'), ('IE', 'Irlanda'), ('IS', 'Islandia'), ('IL', 'Israel'), ('IT', 'Italia'), ('JM', 'Jamaica'), ('JP', 'Japón'), ('JO', 'Jordania'), ('KZ', 'Kazajistán'), ('KE', 'Kenia'), ('KG', 'Kirguistán'), ('KI', 'Kiribati'), ('KW', 'Kuwait'), ('LA', 'Laos'), ('LS', 'Lesoto'), ('LV', 'Letonia'), ('LB', 'Líbano'), ('LR', 'Liberia'), ('LY', 'Libia'), ('LI', 'Liechtenstein'), ('LT', 'Lituania'), ('LU', 'Luxemburgo'), ('MG', 'Madagascar'), ('MY', 'Malasia'), ('MW', 'Malaui'), ('MV', 'Maldivas'), ('ML', 'Malí'), ('MT', 'Malta'), ('MA', 'Marruecos'), ('MH', 'Islas Marshall'), ('MU', 'Mauricio'), ('MR', 'Mauritania'), ('MX', 'México'), ('FM', 'Micronesia'), ('MD', 'Moldavia'), ('MC', 'Mónaco'), ('MN', 'Mongolia'), ('ME', 'Montenegro'), ('MZ', 'Mozambique'), ('NA', 'Namibia'), ('NR', 'Nauru'), ('NP', 'Nepal'), ('NI', 'Nicaragua'), ('NE', 'Níger'), ('NG', 'Nigeria'), ('NO', 'Noruega'), ('NZ', 'Nueva Zelanda'), ('OM', 'Omán'), ('NL', 'Países Bajos'), ('PK', 'Pakistán'), ('PW', 'Palaos'), ('PA', 'Panamá'), ('PG', 'Papúa Nueva Guinea'), ('PY', 'Paraguay'), ('PE', 'Perú'), ('PL', 'Polonia'), ('PT', 'Portugal'), ('GB', 'Reino Unido'), ('CF', 'República Centroafricana'), ('CZ', 'República Checa'), ('DO', 'República Dominicana'), ('RO', 'Rumania'), ('RW', 'Ruanda'), ('RU', 'Rusia'), ('WS', 'Samoa'), ('KN', 'San Cristóbal y Nieves'), ('SM', 'San Marino'), ('VC', 'San Vicente y las Granadinas'), ('LC', 'Santa Lucía'), ('ST', 'Santo Tomé y Príncipe'), ('SN', 'Senegal'), ('RS', 'Serbia'), ('SC', 'Seychelles'), ('SL', 'Sierra Leona'), ('SG', 'Singapur'), ('SY', 'Siria'), ('SO', 'Somalia'), ('LK', 'Sri Lanka'), ('SZ', 'Suazilandia'), ('ZA', 'Sudáfrica'), ('SD', 'Sudán'), ('SS', 'Sudán del Sur'), ('SE', 'Suecia'), ('CH', 'Suiza'), ('SR', 'Surinam'), ('TH', 'Tailandia'), ('TZ', 'Tanzania'), ('TJ', 'Tayikistán'), ('TL', 'Timor Oriental'), ('TG', 'Togo'), ('TO', 'Tonga'), ('TT', 'Trinidad y Tobago'), ('TN', 'Túnez'), ('TM', 'Turkmenistán'), ('TR', 'Turquía'), ('TV', 'Tuvalu'), ('UA', 'Ucrania'), ('UG', 'Uganda'), ('UY', 'Uruguay'), ('UZ', 'Uzbekistán'), ('VU', 'Vanuatu'), ('VE', 'Venezuela'), ('VN', 'Vietnam'), ('YE', 'Yemen'), ('DJ', 'Yibuti'), ('ZM', 'Zambia'), ('ZW', 'Zimbabue')], max_length=50)),
                ('entidad_federativa_nacimiento', models.CharField(max_length=50)),
                ('proveedor_recursos', models.CharField(max_length=100)),
                ('mercado', models.CharField(choices=[('AB', 'Abierto'), ('EDG', 'Empresa del grupo'), ('CCA', 'Cliente Cautivo'), ('REC', 'Recomendado')], max_length=3)),
                ('imss', models.CharField(blank=True, max_length=11, null=True)),
                ('codigo_postal', models.CharField(max_length=5)),
                ('estado', models.CharField(max_length=50)),
                ('municipio', models.CharField(max_length=100)),
                ('colonia', models.CharField(max_length=100)),
                ('calle', models.CharField(max_length=100)),
                ('no_exterior', models.CharField(blank=True, max_length=10, null=True)),
                ('no_interior', models.CharField(blank=True, max_length=10, null=True)),
                ('entre_calles', models.CharField(max_length=200)),
                ('tipo_vivienda', models.CharField(choices=[('PR', 'Propia'), ('RE', 'Rentada')], max_length=3)),
                ('anios_residencia', models.CharField(choices=[('1', '1 año'), ('2', '2 años'), ('3', '3 años'), ('4', '4 años'), ('5', '5 años'), ('6', '6 años'), ('7', '7 años'), ('8', '8 años'), ('9', '9 años'), ('10', '10 años')], max_length=50)),
                ('telefono_fijo', models.CharField(blank=True, max_length=15, null=True)),
                ('celular', models.CharField(max_length=15)),
                ('telefono_avisos', models.CharField(blank=True, max_length=15, null=True)),
                ('email', models.EmailField(max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='Sucursal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=20)),
                ('direccion', models.CharField(max_length=20)),
                ('telefono', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='ReferenciasPersonales',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('direccion', models.CharField(max_length=100)),
                ('relacion', models.CharField(max_length=100)),
                ('telefono', models.CharField(max_length=20)),
                ('solicitud', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='referenciasP', to='sofom_project.solicitud')),
            ],
        ),
        migrations.CreateModel(
            name='ReferenciasBancarias',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('institucion', models.CharField(blank=True, max_length=100, null=True)),
                ('direccion_institucion', models.CharField(blank=True, max_length=100, null=True)),
                ('no_cuenta', models.IntegerField(blank=True, null=True)),
                ('tipo_cuenta', models.CharField(blank=True, max_length=100, null=True)),
                ('telefono_institucion', models.CharField(blank=True, max_length=20, null=True)),
                ('tipo_ref', models.CharField(choices=[('personal', 'Personal'), ('bancaria', 'Bancaria'), ('comercial', 'Comercial'), ('auto empleo', 'Auto empleo'), ('asalariado', 'Asalariado')], max_length=20)),
                ('solicitud', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='referenciasB', to='sofom_project.solicitud')),
            ],
        ),
        migrations.CreateModel(
            name='Info_solicitante',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_empresa', models.CharField(max_length=100)),
                ('puesto', models.CharField(max_length=100)),
                ('antiguedad', models.CharField(max_length=50)),
                ('calle', models.CharField(max_length=100)),
                ('no_exterior', models.CharField(blank=True, max_length=10, null=True)),
                ('no_interior', models.CharField(blank=True, max_length=10, null=True)),
                ('soli_codigo_postal', models.CharField(max_length=5)),
                ('soli_estado', models.CharField(max_length=50)),
                ('soli_municipio', models.CharField(max_length=100)),
                ('soli_colonia', models.CharField(max_length=100)),
                ('telefono', models.IntegerField()),
                ('ext', models.CharField(max_length=20)),
                ('no_empleado', models.IntegerField()),
                ('nombre_jefe', models.CharField(max_length=100)),
                ('ingreso_mensual', models.DecimalField(decimal_places=2, max_digits=10)),
                ('descuento', models.DecimalField(decimal_places=2, max_digits=10)),
                ('ingreso_neto', models.DecimalField(blank=True, decimal_places=2, max_digits=10)),
                ('ingresos_no_comprobables', models.DecimalField(decimal_places=2, max_digits=10)),
                ('solicitud', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='info', to='sofom_project.solicitud')),
            ],
        ),
        migrations.CreateModel(
            name='DatosBanco',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('banco', models.CharField(blank=True, max_length=100)),
                ('cuenta_banco', models.IntegerField(blank=True, null=True)),
                ('clabe_interbancaria', models.IntegerField(blank=True, null=True)),
                ('rfc', models.CharField(blank=True, max_length=12)),
                ('no_tarjeta', models.IntegerField(blank=True, null=True)),
                ('solicitud', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='datos_banco', to='sofom_project.solicitud')),
            ],
        ),
        migrations.CreateModel(
            name='Datos_Credito',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_credito', models.CharField(choices=[('PF-CICLO 1 (periodo)', 'PF-CICLO 1 (periodo)'), ('SISU TE ACOMPAÑA (periodo)', 'SISU TE ACOMPAÑA (periodo)'), ('SISU TE ACOMPAÑA (Dia)', 'SISU TE ACOMPAÑA (Dia)')], max_length=50)),
                ('monto_prestamo', models.DecimalField(decimal_places=2, max_digits=20)),
                ('periodo_pago', models.CharField(choices=[('QUINCENAL', 'Quincenal'), ('MENSUAL', 'Mensual'), ('SEMANAL', 'Semanal')], max_length=10)),
                ('numero_periodos', models.PositiveIntegerField()),
                ('moneda', models.CharField(choices=[('MXN', 'NACIONAL')], max_length=50)),
                ('destino_credito', models.CharField(choices=[('CASA', 'Compra de casa'), ('CARRO', 'Compra de carro'), ('TERRENO', 'Compra de terreno'), ('COLEGIATURAS', 'Colegiaturas'), ('GASTOS PERSONALES', 'Gastos personales'), ('INVERSION', 'Inversion'), ('GASOTOS MEDICOS', 'Gastos Medicos')], max_length=50)),
                ('descripcion', models.CharField(max_length=200)),
                ('solicitud', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='datos_credito', to='sofom_project.solicitud')),
            ],
        ),
        migrations.CreateModel(
            name='Credito',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_credito', models.CharField(choices=[('PF-CICLO 1 (periodo)', 'PF-CICLO 1 (periodo)'), ('SISU TE ACOMPAÑA (periodo)', 'SISU TE ACOMPAÑA (periodo)'), ('SISU TE ACOMPAÑA (Dia)', 'SISU TE ACOMPAÑA (Dia)')], max_length=50)),
                ('periodo_pago', models.CharField(choices=[('QUINCENAL', 'Quincenal'), ('MENSUAL', 'Mensual'), ('SEMANAL', 'Semanal')], max_length=10)),
                ('numero_periodos', models.PositiveIntegerField()),
                ('moneda', models.CharField(choices=[('MXN', 'NACIONAL')], max_length=50)),
                ('monto', models.DecimalField(decimal_places=2, max_digits=15)),
                ('fecha_inicio', models.DateField()),
                ('fecha_final', models.DateField()),
                ('num_pagos', models.IntegerField()),
                ('comision', models.IntegerField()),
                ('seguro', models.IntegerField()),
                ('iva', models.IntegerField()),
                ('estado', models.CharField(choices=[('elaboracion', 'Elaboración'), ('evaluacion', 'Evaluación'), ('autorizacion', 'Autorización'), ('instrumentacion', 'Instrumentación'), ('entregado', 'Entregado')], default='elaboracion', max_length=15)),
                ('tasa_interes', models.DecimalField(decimal_places=2, max_digits=5)),
                ('fecha_aprobacion', models.DateField()),
                ('fecha_entrega', models.DateField()),
                ('solicitud', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='creditos', to='sofom_project.solicitud')),
            ],
        ),
        migrations.CreateModel(
            name='Contactos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('apellido_paterno', models.CharField(max_length=100)),
                ('apellido_materno', models.CharField(max_length=100)),
                ('nombres', models.CharField(max_length=100)),
                ('puesto', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('telefono', models.CharField(max_length=20)),
                ('solicitud', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contactos', to='sofom_project.solicitud')),
            ],
        ),
        migrations.CreateModel(
            name='Solicitud_conyuge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('apellido_paterno', models.CharField(max_length=100)),
                ('apellido_materno', models.CharField(max_length=100)),
                ('nombres', models.CharField(max_length=200)),
                ('fecha_nacimiento', models.DateField()),
                ('edad', models.IntegerField()),
                ('rfc', models.CharField(max_length=12)),
                ('genero', models.CharField(choices=[('M', 'Masculino'), ('F', 'Femenino')], max_length=1)),
                ('lugar_nacimiento', models.CharField(max_length=100)),
                ('profesion', models.CharField(max_length=100)),
                ('nombre_empresa', models.CharField(max_length=100)),
                ('puesto', models.CharField(max_length=100)),
                ('fecha_ingreso', models.DateField()),
                ('antiguedad', models.CharField(blank=True, max_length=12)),
                ('solicitud', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conyuge', to='sofom_project.solicitud')),
            ],
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('es_matriz', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='usuarios_grupo', to='auth.group', verbose_name='groups')),
                ('sucursal', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='usuarios', to='sofom_project.sucursal')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='usuarios_permiso', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
